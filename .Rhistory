library(flexdashboard)
library(DT)
library(shiny)
library(ggplot2)
library(tidyverse)
library(here)
```{r}
if(!dir.exists(here("data"))) { dir.create(here("data")) }
if(!file.exists(here("data","expeditions.RData"))){
expeditions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-09-22/expeditions.csv')
save(expeditions, file = here("data","expeditions.RData"))
}else{
load(here("data","expeditions.RData"))
}
View(expeditions)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
expeditions_data %>%
group_by(season) %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = fct_reorder(.f = season, .x = deaths))) +
geom_bar(stat = "identity") +
xlab("season") +
ylab("total number of deaths") +
ggtitle("Figure 1: Everest Expedition Deaths by Season") +
labs(subtitle = "The vast majority of deaths occured in the spring (peak climbing season)")
expeditions_data <- expeditions %>% mutate(any_deaths = ifelse(member_deaths + hired_staff_deaths == 0, "no", "yes")) %>% select(-trekking_agency) %>% filter(peak_name == "Everest") %>% mutate(total_deaths = member_deaths + hired_staff_deaths) %>% as_tibble()
expeditions_data %>%
group_by(season) %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = fct_reorder(.f = season, .x = deaths))) +
geom_bar(stat = "identity") +
xlab("season") +
ylab("total number of deaths") +
ggtitle("Figure 1: Everest Expedition Deaths by Season") +
labs(subtitle = "The vast majority of deaths occured in the spring (peak climbing season)")
expeditions_data <- expeditions %>% mutate(any_deaths = ifelse(member_deaths + hired_staff_deaths == 0, "no", "yes")) %>% select(-trekking_agency) %>% filter(peak_name == "Everest") %>% mutate(total_deaths = member_deaths + hired_staff_deaths) %>% as_tibble()
View(expeditions_data)
expeditions_data %>%
group_by(year) %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = year)) +
geom_point() +
geom_smooth() +
xlab("Year") +
ylab("total number of deaths") +
ggtitle("Figure 2: Everest Expedition Deaths by Year") +
labs(subtitle = "Deaths seem to be trending upwards")
library(flexdashboard)
library(DT)
library(shiny)
library(ggplot2)
library(tidyverse)
library(here)
knitr::opts_chunk$set(fig.width = 6, fig.asp = 2/3)
expeditions_data %>%
group_by(year) %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = year)) +
geom_point() +
geom_smooth() +
xlab("Year") +
ylab("total number of deaths") +
ggtitle("Figure 2: Everest Expedition Deaths by Year") +
labs(subtitle = "Deaths seem to be trending upwards")
expeditions_data %>%
group_by(oxygen_used) %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = oxygen_used)) +
geom_bar(stat = "identity") +
xlab("Was Oxygen Used?") +
ylab("total number of deaths") +
ggtitle("Figure 3: Everest Expedition Deaths by Oxygen Use") +
labs(subtitle = "Most deaths occured when oxygen was used but this is likely because most expeditions use oxygen")
library(flexdashboard)
library(DT)
library(shiny)
library(ggplot2)
library(tidyverse)
library(here)
knitr::opts_chunk$set(fig.width = 5, fig.asp = 1/3)
expeditions_data %>%
group_by(season) %>%
filter(peas_name %in% "Everest") %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = fct_reorder(.f = season, .x = deaths))) +
geom_bar(stat = "identity") +
xlab("season") +
ylab("total number of deaths") +
ggtitle("Figure 1: Everest Expedition Deaths by Season") +
labs(subtitle = "The vast majority of deaths occured in the spring (peak climbing season)")
expeditions_data %>%
group_by(season) %>%
filter(peak_name %in% "Everest") %>%
summarize(deaths = sum(total_deaths)) %>%
ggplot(aes(y = deaths,
x = fct_reorder(.f = season, .x = deaths))) +
geom_bar(stat = "identity") +
xlab("season") +
ylab("total number of deaths") +
ggtitle("Figure 1: Everest Expedition Deaths by Season") +
labs(subtitle = "The vast majority of deaths occured in the spring (peak climbing season)")
View(expeditions)
expeditions %>% count(peak_name)
library(tidyverse)
expeditions %>% count(peak_name)
View(expeditions_data)
library(purrr)
library(purrr)
expeditions %>% count(peak_name) %>% pluck(1)
peaks <- expeditions %>% count(peak_name) %>% pluck(1)
calculate_CI.ci_class <- function(x, conf, ...) {
x_obj <- x
if(conf < 1) {
alpha <- 1 - conf
degrees_freedom = length(x_obj) - 1
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
mean <- 1/length(x_obj) * (sum(x_obj))
h1 <- c()
for(i in 1:length(x_obj)) {
mean1 <- 1/length(x_obj) * (sum(x_obj))
h <- ((x_obj[[i]]) - mean1)^2
h1 <- c(h1,h)
for_part <- sum(h1) }
solution_part_one <- ((1/(length(x_obj)-1)))
pls_work <- (for_part * solution_part_one)
standard_dev <- sqrt(pls_work)
output_high <- mean + (t_score * standard_dev / sqrt(length(x_obj)))
output_low <- mean - (t_score * standard_dev / sqrt(length(x_obj)))
lower_bound <- output_low
upper_bound <- output_high
print(paste(lower_bound, "= lower_bound"))
print(paste(upper_bound, "= upper_bound"))
}
else {(stop("Conf value cant be greater or equal to 1"))}
}
make_ci_class <- function(x){structure((data = x), class = "ci_class")}
test_ci <- expeditions_data %>% group_by(year) %>% summarize(deaths = sum(total_deaths)) %>% pull(deaths) # make vector of deaths
expeditions_data_ci_class <-make_ci_class(test_ci) # make class "ci_class"
calculate_CI(expeditions_data_ci_class, .95) # Apply calculate_CI function. The lower bound for deaths in a year is 3.2 and the upper bound is 5.06.
calculate_CI <- function(x, conf, ...) {
x_obj <- x
if(conf < 1) {
alpha <- 1 - conf
degrees_freedom = length(x_obj) - 1
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
mean <- 1/length(x_obj) * (sum(x_obj))
h1 <- c()
for(i in 1:length(x_obj)) {
mean1 <- 1/length(x_obj) * (sum(x_obj))
h <- ((x_obj[[i]]) - mean1)^2
h1 <- c(h1,h)
for_part <- sum(h1) }
solution_part_one <- ((1/(length(x_obj)-1)))
pls_work <- (for_part * solution_part_one)
standard_dev <- sqrt(pls_work)
output_high <- mean + (t_score * standard_dev / sqrt(length(x_obj)))
output_low <- mean - (t_score * standard_dev / sqrt(length(x_obj)))
lower_bound <- output_low
upper_bound <- output_high
print(paste(lower_bound, "= lower_bound"))
print(paste(upper_bound, "= upper_bound"))
}
else {(stop("Conf value cant be greater or equal to 1"))}
}
calculate_CI(expeditions_data_ci_class, .95) # Apply calculate_CI function. The lower bound for deaths in a year is 3.2 and the upper bound is 5.06.
DT::datatable(expeditions_data,
options = list(autoWidth = TRUE,
pageLength = 10,
scroller = TRUE,
scrollY = '450px'))
expeditions_data <- expeditions %>%
mutate(any_deaths = ifelse(member_deaths + hired_staff_deaths == 0, "no", "yes")) %>%
select(-trekking_agency) %>%
mutate(total_deaths = member_deaths + hired_staff_deaths) %>%
select(peak_name, season, total_deaths, year, oxygen_used) %>%
as_tibble()
